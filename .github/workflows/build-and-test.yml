name: Build and Test libcharm

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # architectures to test
        arch: [linux/amd64, linux/arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker container for ${{ matrix.arch }}
        run: |
          docker buildx create --use
          docker buildx build --platform=${{ matrix.arch }} -f Dockerfile.ci -t libcharm-ci --load .

      - name: Build libcharm and run main executable
        run: |
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons --build=debug --compiler=gcc'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons --build=release --compiler=gcc'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons --build=debug --compiler=clang'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons --build=release --compiler=clang'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons run --build=release'


      - name: Run libcharm tests
        run: |
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons test --build=debug --compiler=gcc'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons test --build=release --compiler=gcc'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons test --build=debug --compiler=clang'
          docker run --rm --platform=${{ matrix.arch }} -t libcharm-ci sh -c 'scons test --build=release --compiler=clang'
